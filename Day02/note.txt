上节课回顾：
    1、接口测试
        如何去做接口测试？
            接口文档
                这个接口是做什么的？
                URL
                请求类型
                参数--> 如何传递参数
                    params
                    Body--> form表单、Json
                header
                    请求时携带相关信息，如token
        cookie、Session
            Session：服务器端记录的用户相关信息
            Cookie：本地浏览器的缓存信息
            浏览器和服务器端通信：
                Cookie==> 服务器端
                header头添加标识 （如token) ==> 服务器端

                服务器端接收后和session匹配，做二次身份校验

        POSTMAN接口测试工具
            1、发请求
            2、断言
            3、多接口参数依赖
            4、参数化
            5、接口自动化  newman+postman


本周内容
    互联网最常用的后端语言
        Java
        PHP
        Python
        GO
        C++
        C#
    Python
        非常非常弱类型的语言
        使用python的方向
            人工智能
            图像识别
            NASA

        黑盒测试
            自动化

        白盒测试
            单元测试    ==>
            代码走查    ==> 静态代码扫描sonar   如空指针、逻辑走查

        **** 编程思维
            写代码的时候，如何思考我要做什么？
            ***** 做这件事情该怎么样去拆分实现？ 决定了你能不能实现功能
            代码量===> 多写才能加深印象

        Python版本选择
            Python2.x   和  Python3.6+

        编程模式？
            交互式编程
            脚本式编程

        工具：IDE工具
            记事本、notepad++、sublime
            Pycharm

        python代码文件命名
            xxx.py

    代码编写
        注释：
            快捷键：ctrl + /  or  command + /
        PEP8编码规范, 快捷键优化键 ： ctrl+alt+l   or command+option+l
            符号后加一个空格
            最后一行一定是空行，不能是代码来做为最后一行
        变量：
            参数： key  —> value
            变量:  变量名 —>  value

        常用内置函数：
            print()
                用来输出内容到控制台上
                可以通过 , 或 + 拼接
            type(变量)
                用来输出变量所对应到类型
        常见异常：
            TypeError：不同类型的数据去做拼接处理
            ValueError：类型转换时，无法完成转换

        空值：
            None

        字符串
            需要使用下面三种类型符号来包裹数据：
                ' '
                " "
                '''  '''
            如果字符串中有 ' 或 " 则前后包裹的符号需要岔开
            如果仍然无法岔开，则需要在字符串中将符号前加一个\

            如果需要将一个变量作为str去使用，需要做类型强转换
                str(变量名字)
        int
            强转换方式：
                int(变量名字)
        float

        不同类型的变量/数据不能用 + 来拼接/相加

    逻辑判断==>
        if
            如果
                怎么样
        if/ else
            如果
                怎么样
            否则
                怎么样
        if /elif /else
            如果 a成立
                怎么样
            如果 b成立
                怎么样
            否则
                怎么样
        = 赋值
        == 比较是否相等

        if 可以判断：
            比较运算符：值与值之间的比较
            值是否存在：是否为None，如果是则代表不存在

        实例：
            判断是否已经实名制的逻辑
                如果已经填写身份证号：
                    则认为你已经实名制
                        你是否已经成年
                            如果已成年，允许玩游戏超过1小时
                            否则，不允许超过1小时
                否则：
                    则认为你没有实名制


            题目：判断是否已经填写年龄的逻辑
                如果已经填写年龄：
                    判断是否满足成年
                        已经成年
                            如果已成年，允许玩游戏超过1小时
                        否则，
                            不允许超过1小时
                否则：
                    则认为你没有填写


        if的小练习
            判断年龄：
                ok 定义大叔的年龄，用随机数
                ok 接收键盘输入的年龄数，然后和大叔的年龄对比；
                如果输入的比大叔的年龄大或小，则提示大了，或小了
                如果输入的和大叔的年龄一致，则提示输入正确

    循环
        for循环，遍历
            遍历数组、遍历字符串、遍历字典
        遍历数字
        for c in range(count):

        continue:
            继续进行循环，但是不会运行continue下面的逻辑
        break：
            直接跳出


        while 循环
            条件循环,如果条件不为True 则会停止

            需要去退出的时候，
                让括号内的条件为False
                加入break
            通过计数器来做为跳出的条件
            变更while循环的条件，使while不能继续循环

    字符串格式化：
        # 字符串格式化的方式有哪种
        # 第一种实现方式： 拼接字符串
        print("欢迎" + name + "登录,今天是" + str(year) + "年" + str(m) + "月" + str(day) + "日")
        # 第二种实现方式： %
        print("欢迎%s登录,今天是%s年%s月%s日" % (name, year, m, day))
        # 第三种实现方式: format
        print("欢迎{name1}登录,{name1}今天是{y}年{m}月{d}日{name1}".format(name1=name, y=year, m=m, d=day))
        data = "欢迎{name1}登录,今天是{y}年{m}月{d}日"
        print(data.format(name1=name, y=year, m=m, d=day))

    List 列表
        增
            append() 添加到最后一个元素
            insert(index,value） 将value添加到index位置
        删
            remove() 删除指定内容，如果list中有多个相同内容，则删除从左向右找到的第一个
        改
            list[index] = xxx   直接为指定index的位置赋值即可
        查
            list[index]  直接通过指定索引获取值即可

    作业：
        1、博客总结
        2、学习str的内置方法

        3、购物系统，功能概述： 不限于本周完成
           0）登录能力，每个用户随机初始化余额， 自行初始化一些商品(dict 字典)
           1）菜单功能：充值，给当前用户充值
           2）菜单功能：购买商品，购买商品以后要扣钱，如果钱不够，则不能购买
           3) 退出系统，打印出已经本次购买的商品和花了多少钱

        4、mysql基本查询select语句学习（重要不紧急）
